@using Radyn.News.DataStructure
@using Radyn.News.Tools
@using Radyn.Utility
@using Radyn.Web.Mvc;
@using Radyn.WebApp.AppCode.Security

@model IEnumerable<News>
    @{
        ViewBag.Title = Resources.News.NewsList;
        Layout = "~/Views/Shared/_Layout.cshtml";

    }
    @section Head{

    }
    @section PageTitle
{
        @Resources.News.NewsList
    }
    @section PageAction
{
        <div class="button-div m-btn waves-blue i-add">
            @{Html.Radyn().ImageActionLink().NavigateUrl(Url.Content("~/WebDesign/News/Create")).Text(Resources.News.NewNews).Align(Resources.Common.Aligment.ToEnum<ImageActionLink.Alignment>()).ImageUrl(Url.Content("~/Content/Images/Add.png")).ImagePosition(ImageActionLink.Position.Right).Render(); }
        </div>
        <div class="button-div m-btn waves-red i-return">
            @{Html.Radyn().ImageActionLink().Text(Resources.Common.Return).Align(ImageActionLink.Alignment.Left).ImageUrl(Url.Content("~/Content/Images/go-back.png")).ImagePosition(ImageActionLink.Position.Right).OtherAttribute(new { onclick = "window.location='/Security/User/Menu?oid=" + Radyn.Common.Constants.OperationId.WebDesignOperationId + "'" }).Render(); }
        </div>
    }
    @section PageActionDown
{
        <div class="button-div m-btn waves-blue i-add">
            @{Html.Radyn().ImageActionLink().NavigateUrl(Url.Content("~/WebDesign/News/Create")).Text(Resources.News.NewNews).Align(Resources.Common.Aligment.ToEnum<ImageActionLink.Alignment>()).ImageUrl(Url.Content("~/Content/Images/Add.png")).ImagePosition(ImageActionLink.Position.Right).Render(); }

        </div>
        <div class="button-div m-btn waves-red i-return">
            @{Html.Radyn().ImageActionLink().Text(Resources.Common.Return).Align(ImageActionLink.Alignment.Left).ImageUrl(Url.Content("~/Content/Images/go-back.png")).ImagePosition(ImageActionLink.Position.Right).OtherAttribute(new { onclick = "window.location='/Security/User/Menu?oid=" + Radyn.Common.Constants.OperationId.WebDesignOperationId + "'" }).Render(); }
        </div>
    }
    <div class="radynForm">

        <div class="fit">
            @{Html.Radyn().Grid(Model).Name("RadynGrid").Columns(columns =>
                      {
                          columns.Template(news => news.GetNewsContent(SessionParameters.Culture).Title1).Title(Resources.News.NewsTitle).Width(350).HeaderHtmlAttributes(new { style = "text-align:center" });
                          columns.Template(news => news.PublishDate).Title(Resources.News.NewsPublishDate).Width(100).HeaderHtmlAttributes(new { style = "text-align:center" });
                          columns.Template(news => news.PublishTime).Title(Resources.News.NewsPublishTime).Width(100).HeaderHtmlAttributes(new { style = "text-align:center" });
                          columns.Template(news => news.Enabled ? Resources.Common.Enable : Resources.Common.Disable).Title(Resources.News.NewsEnabled).Width(100).HeaderHtmlAttributes(new { style = "text-align:center" });
                          columns.Template(news =>
                                "<a style='cursor: pointer;'  href='" + Url.Content("~/WebDesign/News/Details?Id=" + news.Id) + "'>" +
                              " <img width='18' align='absmiddle' title='" + Resources.Common.Detail + "' src='" + Url.Content("~/Content/Images/details.png") + "' />" + "</a> | " +
                              "<a style='cursor: pointer;'  href='" + Url.Content("~/WebDesign/News/Edit?Id=" + news.Id) + "'> " +
                              " <img width='18' align='absmiddle' title='" + Resources.Common.Edit + "' src='" + Url.Content("~/Content/Images/edit.png") + "' />" + "</a> | " +
                              "<a style='cursor: pointer;'  href='" + Url.Content("~/WebDesign/News/Delete?Id=" + news.Id) + "'> " +
                              " <img width='18' align='absmiddle' title='" + Resources.Common.Delete + "' src='" + Url.Content("~/Content/Images/Delete-Close.png") + "' />" + "</a>  ").Encode(false).Width(300).Filterable(false);

                      })
                            //
                            .Sortable(sorting => sorting.Enabled(true))
                            .Pageable(paging => paging.Enabled(true))
                            .Filterable(filtering => filtering.Enabled(true))
                            //.Misc(x => x.ShowDebug(true))
                            //.Footer(true)
                            .Render();
            }
        </div>
    </div>






