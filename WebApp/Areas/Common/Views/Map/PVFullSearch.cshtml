@using Radyn.Web.Mvc;
<script src="~/Scripts/leaflet/leaflet.js"></script>
<link href="~/Scripts/leaflet/leaflet.css" rel="stylesheet" />
<script type="text/javascript">
    var gmarkers = [];
    function initMap() {
        var SelectMode = $("#SelectMode").val();
        var lat = $("#Lat").val();
        if (lat == "") lat = "0";
        var Lon = $("#Lon").val();
        if (Lon == "") Lon = "0";
        var mapZoom = $("#Zoom").val();
        if (lat == "") lat = "2";
        var map = L.map('dvMap').setView([parseFloat(lat), parseFloat(Lon)], parseInt(mapZoom));
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        L.Icon.Default.imagePath ="/Scripts/leaflet/images/";
        placeMarker(parseFloat(lat), parseFloat(Lon), map);
        if (SelectMode == "True") {
            map.on('click', function (event) {
              debugger;
                removeMarker(map);
                if (ValidateDistanct(event.latlng.lat, event.latlng.lng)) {
                    placeMarker(event.latlng.lat, event.latlng.lng,map);
                    document.getElementById("Lat").value = event.latlng.lat;
                    document.getElementById("Lon").value = event.latlng.lng;
                    document.getElementById("Zoom").value = map.getZoom();
                } else {
                    NewMode(map);
                }
               
            });

          
          

        }



    }
    function removeMarker(map) {
        debugger;
        if (gmarkers.length > 0) {
            for (var i=0; i<gmarkers.length; i++) {
                if (gmarkers[i] != null) {
                    map.removeLayer(gmarkers[i])
                    
                    

                }
            }
        }
        gmarkers = [];
    }
    function placeMarker(lat, lon, map) {
        debugger;
        var marker =L.marker([lat, lon]).addTo(map);
        gmarkers.push(marker);
    }
    $(function () {
        initMap();


    });
    function NewMode(map) {
        removeMarker(map);
       $("#Lat").val("");
        $("#Lon").val("");
        $("#Zoom").val("");


    }
    var rad = function(x) {
        return x * Math.PI / 180;
    };

    function ValidateDistanct(p2lat, p2lon) {
        debugger;
        var defaultpoint = $("#defaultpoint").val();
        var maxdistant = $("#maxdistant").val();
        if (maxdistant == "" || maxdistant == undefined || defaultpoint == "" || defaultpoint == undefined)
            return true;
        var f = defaultpoint.split(',');
        var number = getDistance(f[0], f[1], p2lat , p2lon);
        if (number > parseFloat(maxdistant)) {
            alert("آدرس مورد نظر خارج از محدوده فروشگاه میباشد");
            return false;
        }
        return true;


    }
    function getDistance(p1lat,p1lon, p2lat,p2lon) {
        var R = 6378137; // Earth’s mean radius in meter
        var dLat = rad(p2lat -p1lat);
        var dLong = rad(p2lon - p1lon);
        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(rad(p1lat)) * Math.cos(rad(p2lat)) *
            Math.sin(dLong / 2) * Math.sin(dLong / 2);
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        var d = R * c;
        return d; // returns the distance in meter

    };
    function ReturnValue() {
        var lat = $("#Lat").val();
        var Lon = $("#Lon").val();
        var mapZoom = $("#Zoom").val();
        var hidenId = '@ViewBag.hidenId';
        Close_thisModal();
        if (lat != "" && lat != undefined && Lon != "" && Lon != undefined && mapZoom != "" && mapZoom != undefined)
            $('#' + hidenId + '').val(lat + ',' + Lon + ',' + mapZoom);
        else
            $('#' + hidenId + '').val("");
        @Html.Raw((string)ViewBag.callback);
    }
</script>

@Html.Hidden("Lat", (string)ViewBag.Lat)
@Html.Hidden("Lon", (string)ViewBag.Lon)
@Html.Hidden("Zoom", (string)ViewBag.Zoom)
@Html.Hidden("defaultpoint", (string)ViewBag.defaultpoint)
@Html.Hidden("maxdistant", (int?)ViewBag.maxdistant)
@Html.Hidden("SelectMode", (bool)ViewBag.SelectMode)

<div id="dvMap" class="full_map">
</div>
<div class="button-row">
    @if (ViewBag.SelectMode)
    {
        <div class="button-div m-btn waves-blue">
            <i class="fas fa-plus"></i>
            @{Html.Radyn().ImageActionLink().Text("جدید").Align(ImageActionLink.Alignment.Left).ImageUrl(Url.Content("~/Content/Images/Add.png")).ImagePosition(ImageActionLink.Position.Right).OtherAttribute(new { onclick = "NewMode()" }).ImageWidth("15").Render();}
        </div>
        <div class="button-div m-btn waves-green">
            <i class="fas fa-save"></i>
            @{Html.Radyn().ImageActionLink().Text("ذخیره و بستن فرم").Align(ImageActionLink.Alignment.Left).ImageUrl(Url.Content("~/Content/Images/Save.png")).ImagePosition(ImageActionLink.Position.Right).OtherAttribute(new { onclick = "ReturnValue()" }).ImageWidth("15").Render();}
        </div>
    }
    <div class="button-div m-btn waves-red">
        <i class="fas fa-undo-alt"></i>
        @{Html.Radyn().ImageActionLink().Text("  بستن فرم").Align(ImageActionLink.Alignment.Left).ImageUrl(Url.Content("~/Content/Images/Close.png")).ImagePosition(ImageActionLink.Position.Right).OtherAttribute(new { onclick = "Close_thisModal()" }).ImageWidth("15").Render();}
    </div>
</div>


