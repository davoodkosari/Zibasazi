@using Radyn.Congress.DataStructure
@using Radyn.Congress.Tools
@using Radyn.FileManager
@using Radyn.FormGenerator.Tools
@using Radyn.Web.Mvc.Utility
@using Radyn.WebApp.AppCode.Security
@using Radyn.WebApp.Areas.Common.Component
@using Radyn.Utility
@using Radyn.WebApp.Areas.Congress.Tools
@using Radyn.WebApp.Areas.FormGenerator.Tools
@model Article
<div class="item-input">
    <div class="table-row-cap">
        <div class="item">
            @string.Format(Resources.Congress.ArticleTitle, SessionParameters.CurrentCongress.Configuration.ArticleTitle)
        </div>
    </div>
    <div class="table-row-item readonly">
        <div class="item">
            @Html.DisplayFor(m => m.Title)

        </div>
    </div>
</div>
<div class="item-input">
    <div class="table-row-cap">
        <div class="item">
            @Resources.Congress.PublishDate
        </div>
    </div>
    <div class="table-row-item readonly">
        <div class="item">
            @Html.DisplayFor(article => article.PublishDate)
        </div>
    </div>
</div>
<div class="item-input">
    <div class="table-row-cap">
        <div class="item">
            @Resources.Congress.PivotCategory
        </div>
    </div>
    <div class="table-row-item readonly">
        <div class="item">
            @{
                if (Model.Pivot.PivotCategoryId != null)
                {
                    @Html.DisplayFor(article => article.Pivot.PivotCategory.Title)
                }

            }
        </div>
    </div>
</div>
<div class="item-input">
    <div class="table-row-cap">
        <div class="item">
            @Resources.Congress.Pivot
        </div>
    </div>
    <div class="table-row-item readonly">
        <div class="item">
            @Html.DisplayFor(article => article.Pivot.Title)
        </div>
    </div>
</div>
<div class="item-input">
    <div class="table-row-cap">
        <div class="item">
            @string.Format(Resources.Congress.ArticleState, SessionParameters.CurrentCongress.Configuration.ArticleTitle)
        </div>
    </div>
    <div class="table-row-item readonly">
        <div class="item">
            @if (Model != null)
            {
                @(Model.Status.ToString().ToEnum<Enums.ArticleState>().GetDescriptionInLocalization())
            }
        </div>
    </div>
</div>
@if (SessionParameters.CurrentCongress != null && SessionParameters.CurrentCongress.Configuration.EnabledArticleKeyword)
{
    <div class="item-input">
        <div class="table-row-cap">
            <div class="item">
                @Resources.Congress.KeyWord
            </div>
        </div>
        <div class="table-row-item readonly">
            <div class="item">
                @Html.DisplayFor(article => article.Keyword)
            </div>
        </div>
    </div>
}
<div class="item-input">
    <div class="table-row-cap">
        <div class="item">
            @Resources.Congress.FinalState
        </div>
    </div>
    <div class="table-row-item  readonly">
        <div class="item">
            @if (Model != null)
            {
                @(Model.FinalState.ToString().ToEnum<Enums.FinalState>().GetDescriptionInLocalization())
            }
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.Abstract))
{
    <div class="item-input fit">
        <div class="table-row-cap">
            <div class="item">
                @Resources.Congress.ArticleAbstract
            </div>
        </div>
        <div class="table-row-item table-c-auto table-fit readonly">
            <div class="item">
                @{
                    Html.HtmlEncoder(Model.Abstract);
                }
            </div>
        </div>
    </div>
}
@if (Model.AbstractFileId != null)
{
    <div class="fit">
        <div class="table-row-cap table-c-double">
            <div class="item">
                @Resources.Congress.AbstractFile
            </div>
        </div>
        <div class="table-row-item table-c-auto table-fit ">
            <div class="item">
                @{
                    Html.RadynFile().Image().ID(Model.AbstractFileId.Value).Download().Render();
                }
            </div>
        </div>
    </div>
}



@if (!string.IsNullOrEmpty(Model.ArticleOrginalText))
{
    <div class="item-input fit">
        <div class="table-row-cap">
            <div class="item">
                @string.Format(SessionParameters.CurrentCongress.Configuration.ArticleOrginalTitle)
            </div>
        </div>
        <div class="table-row-item table-c-auto table-fit readonly ">
            <div class="item">
                @{
                    Html.HtmlEncoder(Model.ArticleOrginalText);
                }
            </div>
        </div>
    </div>
}

@if (Model.OrginalFileId != null)
{
    <div class="item-input">
        <div class="table-row-cap">
            <div class="item">
                @String.Format(Resources.Congress.OrginalFile, SessionParameters.CurrentCongress.Configuration.ArticleTitle)
            </div>
        </div>
        <div class="table-row-item">
            <div class="item">
                @{
                    Html.RadynFile().Image().ID(Model.OrginalFileId.Value).Download().Render();
                }
            </div>
        </div>
    </div>
}


@{
    var configurationContent = SessionParameters.CurrentCongress.Configuration.GetConfigurationContent();
    if (configurationContent.AttachRefereeFileId != null)
    {
        <div class="item-input">
            <div class="table-row-cap">
                <div class="item">
                    @string.Format(Resources.Congress.AttachRefereeFile, SessionParameters.CurrentCongress.Configuration.ArticleTitle)
                </div>
            </div>
            <div class="table-row-item">
                <div class="item">

                    @{
                        Html.RadynFile().Image().ID(configurationContent.AttachRefereeFileId.Value).Download().Render();
                    }

                </div>
            </div>
        </div>

    }

}
@if (Model != null)
{
    Html.FormGenerator(AppExtention.CongressMoudelName + "-/Congress/ArticlePanel/Article", Model.GetType().Name, Model.Id.ToString(), FormState.DetailsMode);
    Html.FormGenerator(AppExtention.CongressMoudelName + "-/Congress/ArticlePanel/Article?PivotId=" + Model.PivotId, Model.GetType().Name, Model.Id.ToString(), FormState.DetailsMode);
}