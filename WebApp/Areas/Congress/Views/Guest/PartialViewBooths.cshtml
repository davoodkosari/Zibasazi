@using Radyn.Common.Definition
@using Radyn.Utility
@using Radyn.Web.Mvc

@model IEnumerable<Radyn.Congress.DataStructure.Booth>

<script type="text/javascript">
    
</script>
 @if (ViewBag.BoothMapId != null)
             {
                 <img  src="@Radyn.FileManager.FileManagerContants.FileHandlerRoot@ViewBag.BoothMapId"  height="100" width="98%"    />
             }
  @{Html.Radyn().Grid(Model).Name("Grid").HtmlAttributes(new { style = "width:98.5%;margin: 0 auto" }).Columns(columns =>
      {
          columns.Template(booth => "<input type='checkbox' class='checkboxGroups'   alt='" + Resources.Common.Select + "' style='cursor: pointer'  value='" + booth.Id + "'  id='CheckSelect-" + booth.Id + "' name='CheckSelect-" + booth.Id + "' />").Width(70).Encode(false);
          columns.Template(booth => booth.Code).Title(Resources.Congress.Code).Width(100).HeaderHtmlAttributes(new { style = "text-align:center" });
          columns.Template(booth => booth.CategoryId.HasValue ? booth.BoothCatgory.Title : "").Title(Resources.Congress.BoothCategory).Width(100).HeaderHtmlAttributes(new { style = "text-align:center" });
          columns.Template(booth => booth.Location).Title(Resources.Congress.Location).Width(100).HeaderHtmlAttributes(new { style = "text-align:center" });
          columns.Template(booth => booth.ValidCost + " " + booth.CurrencyType.ToEnum<Enums.CurrencyType>().GetDescriptionInLocalization()).Title(Resources.Congress.Cost).Width(100).HeaderHtmlAttributes(new { style = "text-align:center" });
          columns.Template(booth => booth.ReservCapacity).Title(Resources.Congress.ReservCapacity).Width(80).HeaderHtmlAttributes(new { style = "text-align:center" });
          columns.Template(booth => booth.FreeCapicity).Title(Resources.Congress.FreeCapicity).Width(80).HeaderHtmlAttributes(new { style = "text-align:center" });
          columns.Template(booth => booth.MaxBoothOfficerCount).Title(Resources.Congress.MaxBoothOfficerCount).Width(80).HeaderHtmlAttributes(new { style = "text-align:center" });


      })

  .Sortable(sorting => sorting.Enabled(true))
  .Pageable(paging => paging.Enabled(false))
  .Filterable(filtering => filtering.Enabled(true))
  //.Footer(true)
  .Render();}